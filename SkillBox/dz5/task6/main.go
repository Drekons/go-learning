package main

import (
	"fmt"
	"math"
)

func main() {
	fmt.Println("*** Решение квадратного уравнения ***")

	var a float64
	var b float64
	var c float64

	fmt.Print("Введите первую ставку: ")
	fmt.Scan(&a)

	fmt.Print("Введите вторую ставку: ")
	fmt.Scan(&b)

	fmt.Print("Введите третью ставку: ")
	fmt.Scan(&c)

	D := math.Pow(b, 2.) - 4*a*c

	if D > 0 {
		x1 := (-b * math.Sqrt(D)) / (2 * a)
		x2 := (-b - math.Sqrt(D)) / (2 * a)
		fmt.Println("Два корня x1:", x1, "x2:", x2)
	} else if D == 0 {
		x := -1. * b / (2 * a)
		fmt.Println("Один корень x:", x)
	} else {
		fmt.Println("Корней нет")
	}
}

/**

Давайте напишем программу, решающую квадратные уравнения.
Пользователь вводит коэффициенты a, b и c квадратного уравнения. Программа должна вывести корни уравнения. Для решения уравнения необходимо:

Вычислить дискриминант по формуле:

Если D>0, будет два различных корня, которые находятся по формуле.

Если D = 0, будет один корень, который находится по формуле.

Если D < 0, то вывести, что корней нет.



Советы и рекомендации

Для возведения b в квадрат, можно воспользоваться умножением, а можно функцией math.Pow (при ее использовании переменная b должна быть типа float64). Для вычисления квадратного корня необходимо воспользоваться функцией math.Sqrt.


*/
